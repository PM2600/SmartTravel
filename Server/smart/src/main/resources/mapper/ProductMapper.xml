<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.mapper.ProductMapper">

<!--    <resultMap id="ProductEntityMap" type="com.app.entity.">-->
<!--    </resultMap>-->

    <insert id="proInsert" useGeneratedKeys="true" keyProperty="pid">
        INSERT INTO product (phone, text, `type`, price, num, image, `time`, status, ipaddr, introdu, introduce)
        VALUES( #{phone},
                #{text},
                #{type},
                #{price},
                #{num},
                #{image},
                #{time},
                #{status},
                #{ipaddr},
                #{introdu},
                #{introduce})
    </insert>
    
    <select id="findByType" resultType="com.app.vo.Display">
        SELECT
            pid, text, nickName, introdu, ipaddr
        FROM
            product, user
        WHERE
            type = #{type} AND status = 1 AND product.phone = user.phone
    </select>

    <select id="findByPhone" resultType="com.app.vo.Display">
        SELECT
            pid, text, nickName, introdu, ipaddr
        FROM
            product, user
        WHERE
            product.phone = #{phone} AND status = 1 AND product.phone = user.phone
    </select>

    <select id="findImage" resultType="com.app.entity.Product">
        SELECT
            image
        FROM
            product
        WHERE
            pid = #{pid}
    </select>

    <select id="show" resultType="com.app.vo.Detail">
        SELECT
            pid, product.phone, text, type, price, num, ipaddr, introdu, introduce, nickName
        FROM
            product, `user`
        WHERE
            pid = #{pid} AND status = 1 AND product.phone = `user`.phone
    </select>

    <update id="proDelete">
        UPDATE
            product
        SET
            status = 3
        WHERE
            pid = #{pid}
    </update>

    <update id="proOff">
        UPDATE
            product
        SET
            status = 2
        WHERE
            pid = #{pid}
    </update>
    
    <select id="findById" resultType="com.app.entity.Product">
        SELECT
            *
        FROM
            product
        WHERE
            pid = #{pid} AND status = #{status}
    </select>

    <update id="giveLike">
        UPDATE
            product
        SET
            `like` = `like` + 1, heat = heat + 2
        WHERE
            pid = #{pid} AND status = 1
    </update>

    <update id="canLike">
        UPDATE
            product
        SET
            `like` = `like` - 1, heat = heat - 2
        WHERE
            pid = #{pid} AND status = 1
    </update>

    <insert id="intoLove" useGeneratedKeys="true">
        INSERT INTO love (pid, phone, islove)
            VALUES(#{pid},
                   #{phone},
                   1)
    </insert>

    <select id="findLove" resultType="com.app.entity.Love">
        SELECT
            *
        FROM
            love
        WHERE
            pid = #{pid} AND phone = #{phone}
    </select>

    <update id="updateLove">
        UPDATE
            love
        SET
            islove = #{islove}
        WHERE
            lid = #{lid}
    </update>

    <update id="clickPro">
        UPDATE
            product
        SET
            click = click + 1, heat = heat + 1
        WHERE
            pid = #{pid} AND status = 1
    </update>

    <select id="clickChart" resultType="com.app.vo.Display">
        SELECT
            pid, text, nickName, introdu, ipaddr, click
        FROM
            product, user
        WHERE
            status = 1 AND product.phone = user.phone
        ORDER BY click DESC limit 10
    </select>

    <select id="likeChart" resultType="com.app.vo.Display">
        SELECT
            pid, text, nickName, introdu, ipaddr, `like`
        FROM
            product, user
        WHERE
            status = 1 AND product.phone = user.phone
        ORDER BY `like` DESC limit 10
    </select>

    <select id="heatChart" resultType="com.app.vo.Display">
        SELECT
            pid, text, nickName, introdu, ipaddr, heat
        FROM
            product, user
        WHERE
            status = 1 AND product.phone = user.phone
        ORDER BY `heat` DESC limit 10
    </select>

    <select id="findPhone" resultType="com.app.entity.Product">
        SELECT
            phone
        FROM
            product
        WHERE
            pid=#{pid}
    </select>

</mapper>
